<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="276" failures="0" time="115.409">
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:24" time="27.811" tests="13">
    <testcase classname="Service Tests Account Service authenticate authenticationState should emit null if input is null" name="Service Tests Account Service authenticate authenticationState should emit null if input is null" time="0.053">
    </testcase>
    <testcase classname="Service Tests Account Service authenticate authenticationState should emit the same account as was in input parameter" name="Service Tests Account Service authenticate authenticationState should emit the same account as was in input parameter" time="0.019">
    </testcase>
    <testcase classname="Service Tests Account Service identity should call /account if user is undefined" name="Service Tests Account Service identity should call /account if user is undefined" time="0.026">
    </testcase>
    <testcase classname="Service Tests Account Service identity should call /account only once if not logged out after first authentication and should call /account again if user has logged out" name="Service Tests Account Service identity should call /account only once if not logged out after first authentication and should call /account again if user has logged out" time="0.017">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should navigate to the previous stored url post successful authentication" name="Service Tests Account Service identity navigateToStoredUrl should navigate to the previous stored url post successful authentication" time="0.018">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when authentication fails" name="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when authentication fails" time="0.014">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when no such url exists post successful authentication" name="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when no such url exists post successful authentication" time="0.014">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is not logged" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is not logged" time="0.012">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is logged and has not authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is logged and has not authority" time="0.018">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return true if user is logged and has authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return true if user is logged and has authority" time="0.013">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is not logged" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is not logged" time="0.02">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is logged and has not authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is logged and has not authority" time="0.011">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return true if user is logged and has authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return true if user is logged and has authority" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:24" time="28.88" tests="10">
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to default title if pageTitle is missing on routes" name="Component Tests MainComponent page title navigation end should set page title to default title if pageTitle is missing on routes" time="0.1">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to root route pageTitle if there is no child routes" name="Component Tests MainComponent page title navigation end should set page title to root route pageTitle if there is no child routes" time="0.026">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" name="Component Tests MainComponent page title navigation end should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" time="0.024">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" name="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" time="0.032">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but data is not set for child route" name="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but data is not set for child route" time="0.038">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to default title if pageTitle is missing on routes" name="Component Tests MainComponent page title language change should set page title to default title if pageTitle is missing on routes" time="0.026">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to root route pageTitle if there is no child routes" name="Component Tests MainComponent page title language change should set page title to root route pageTitle if there is no child routes" time="0.03">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" name="Component Tests MainComponent page title language change should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" time="0.03">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" name="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" time="0.034">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but data is not set for child route" name="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but data is not set for child route" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:53" time="2.118" tests="7">
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 0" name="Component Tests Alert Error Component Error Handling Should display an alert on status 0" time="0.041">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 404" name="Component Tests Alert Error Component Error Handling Should display an alert on status 404" time="0.023">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on generic error" time="0.035">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" time="0.032">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" time="0.037">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" time="0.027">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:52" time="3.378" tests="12">
    <testcase classname="Component Tests AuditsComponent today function should set toDate to current date" name="Component Tests AuditsComponent today function should set toDate to current date" time="0.064">
    </testcase>
    <testcase classname="Component Tests AuditsComponent today function if current day is last day of month then should set toDate to first day of next month" name="Component Tests AuditsComponent today function if current day is last day of month then should set toDate to first day of next month" time="0.022">
    </testcase>
    <testcase classname="Component Tests AuditsComponent today function if current day is not last day of month then should set toDate to next day of current month" name="Component Tests AuditsComponent today function if current day is not last day of month then should set toDate to next day of current month" time="0.028">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function should set fromDate to previous month" name="Component Tests AuditsComponent previousMonth function should set fromDate to previous month" time="0.033">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function if current month is January then should set fromDate to previous year last month" name="Component Tests AuditsComponent previousMonth function if current month is January then should set fromDate to previous year last month" time="0.031">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function if current month is not January then should set fromDate to current year previous month" name="Component Tests AuditsComponent previousMonth function if current month is not January then should set fromDate to current year previous month" time="0.032">
    </testcase>
    <testcase classname="Component Tests AuditsComponent By default, on init should set all default values correctly" name="Component Tests AuditsComponent By default, on init should set all default values correctly" time="0.035">
    </testcase>
    <testcase classname="Component Tests AuditsComponent OnInit Should call load all on init" name="Component Tests AuditsComponent OnInit Should call load all on init" time="0.045">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort only by id asc" name="Component Tests AuditsComponent Create sort object Should sort only by id asc" time="0.035">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" name="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" time="0.029">
    </testcase>
    <testcase classname="Component Tests AuditsComponent transition Should not query data if fromDate and toDate are empty" name="Component Tests AuditsComponent transition Should not query data if fromDate and toDate are empty" time="0.031">
    </testcase>
    <testcase classname="Component Tests AuditsComponent transition Should query data if fromDate and toDate are not empty" name="Component Tests AuditsComponent transition Should query data if fromDate and toDate are not empty" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:55" time="1.939" tests="5">
    <testcase classname="Service Tests JobHistory Service Service methods should find an element" name="Service Tests JobHistory Service Service methods should find an element" time="0.033">
    </testcase>
    <testcase classname="Service Tests JobHistory Service Service methods should create a JobHistory" name="Service Tests JobHistory Service Service methods should create a JobHistory" time="0.072">
    </testcase>
    <testcase classname="Service Tests JobHistory Service Service methods should update a JobHistory" name="Service Tests JobHistory Service Service methods should update a JobHistory" time="0.017">
    </testcase>
    <testcase classname="Service Tests JobHistory Service Service methods should return a list of JobHistory" name="Service Tests JobHistory Service Service methods should return a list of JobHistory" time="0.018">
    </testcase>
    <testcase classname="Service Tests JobHistory Service Service methods should delete a JobHistory" name="Service Tests JobHistory Service Service methods should delete a JobHistory" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:55" time="2.025" tests="5">
    <testcase classname="Service Tests Employee Service Service methods should find an element" name="Service Tests Employee Service Service methods should find an element" time="0.022">
    </testcase>
    <testcase classname="Service Tests Employee Service Service methods should create a Employee" name="Service Tests Employee Service Service methods should create a Employee" time="0.055">
    </testcase>
    <testcase classname="Service Tests Employee Service Service methods should update a Employee" name="Service Tests Employee Service Service methods should update a Employee" time="0.015">
    </testcase>
    <testcase classname="Service Tests Employee Service Service methods should return a list of Employee" name="Service Tests Employee Service Service methods should return a list of Employee" time="0.016">
    </testcase>
    <testcase classname="Service Tests Employee Service Service methods should delete a Employee" name="Service Tests Employee Service Service methods should delete a Employee" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:57" time="1.864" tests="5">
    <testcase classname="Component Tests RegisterComponent should ensure the two passwords entered match" name="Component Tests RegisterComponent should ensure the two passwords entered match" time="0.036">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should update success to true after creating an account" name="Component Tests RegisterComponent should update success to true after creating an account" time="0.031">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" name="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" time="0.032">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" name="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" time="0.032">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of generic error" name="Component Tests RegisterComponent should notify of generic error" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:57" time="1.625" tests="5">
    <testcase classname="Service Tests Emprunt Service Service methods should find an element" name="Service Tests Emprunt Service Service methods should find an element" time="0.018">
    </testcase>
    <testcase classname="Service Tests Emprunt Service Service methods should create a Emprunt" name="Service Tests Emprunt Service Service methods should create a Emprunt" time="0.024">
    </testcase>
    <testcase classname="Service Tests Emprunt Service Service methods should update a Emprunt" name="Service Tests Emprunt Service Service methods should update a Emprunt" time="0.016">
    </testcase>
    <testcase classname="Service Tests Emprunt Service Service methods should return a list of Emprunt" name="Service Tests Emprunt Service Service methods should return a list of Emprunt" time="0.012">
    </testcase>
    <testcase classname="Service Tests Emprunt Service Service methods should delete a Emprunt" name="Service Tests Emprunt Service Service methods should delete a Emprunt" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:59" time="1.513" tests="4">
    <testcase classname="Component Tests LoginComponent should authenticate the user" name="Component Tests LoginComponent should authenticate the user" time="0.063">
    </testcase>
    <testcase classname="Component Tests LoginComponent should empty the credentials upon cancel" name="Component Tests LoginComponent should empty the credentials upon cancel" time="0.029">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when register" name="Component Tests LoginComponent should redirect user when register" time="0.027">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when request password" name="Component Tests LoginComponent should redirect user when request password" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:31:59" time="2.002" tests="5">
    <testcase classname="Component Tests JobHistory Management Component Should call load all on init" name="Component Tests JobHistory Management Component Should call load all on init" time="0.041">
    </testcase>
    <testcase classname="Component Tests JobHistory Management Component should load a page" name="Component Tests JobHistory Management Component should load a page" time="0.032">
    </testcase>
    <testcase classname="Component Tests JobHistory Management Component should re-initialize the page" name="Component Tests JobHistory Management Component should re-initialize the page" time="0.034">
    </testcase>
    <testcase classname="Component Tests JobHistory Management Component should calculate the sort attribute for an id" name="Component Tests JobHistory Management Component should calculate the sort attribute for an id" time="0.035">
    </testcase>
    <testcase classname="Component Tests JobHistory Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests JobHistory Management Component should calculate the sort attribute for a non-id attribute" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:01" time="1.523" tests="5">
    <testcase classname="Component Tests Employee Management Component Should call load all on init" name="Component Tests Employee Management Component Should call load all on init" time="0.049">
    </testcase>
    <testcase classname="Component Tests Employee Management Component should load a page" name="Component Tests Employee Management Component should load a page" time="0.032">
    </testcase>
    <testcase classname="Component Tests Employee Management Component should re-initialize the page" name="Component Tests Employee Management Component should re-initialize the page" time="0.046">
    </testcase>
    <testcase classname="Component Tests Employee Management Component should calculate the sort attribute for an id" name="Component Tests Employee Management Component should calculate the sort attribute for an id" time="0.029">
    </testcase>
    <testcase classname="Component Tests Employee Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests Employee Management Component should calculate the sort attribute for a non-id attribute" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:01" time="1.211" tests="5">
    <testcase classname="Service Tests Location Service Service methods should find an element" name="Service Tests Location Service Service methods should find an element" time="0.03">
    </testcase>
    <testcase classname="Service Tests Location Service Service methods should create a Location" name="Service Tests Location Service Service methods should create a Location" time="0.024">
    </testcase>
    <testcase classname="Service Tests Location Service Service methods should update a Location" name="Service Tests Location Service Service methods should update a Location" time="0.016">
    </testcase>
    <testcase classname="Service Tests Location Service Service methods should return a list of Location" name="Service Tests Location Service Service methods should return a list of Location" time="0.017">
    </testcase>
    <testcase classname="Service Tests Location Service Service methods should delete a Location" name="Service Tests Location Service Service methods should delete a Location" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:02" time="1.503" tests="5">
    <testcase classname="Service Tests Livre Service Service methods should find an element" name="Service Tests Livre Service Service methods should find an element" time="0.018">
    </testcase>
    <testcase classname="Service Tests Livre Service Service methods should create a Livre" name="Service Tests Livre Service Service methods should create a Livre" time="0.013">
    </testcase>
    <testcase classname="Service Tests Livre Service Service methods should update a Livre" name="Service Tests Livre Service Service methods should update a Livre" time="0.017">
    </testcase>
    <testcase classname="Service Tests Livre Service Service methods should return a list of Livre" name="Service Tests Livre Service Service methods should return a list of Livre" time="0.013">
    </testcase>
    <testcase classname="Service Tests Livre Service Service methods should delete a Livre" name="Service Tests Livre Service Service methods should delete a Livre" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:02" time="1.975" tests="3">
    <testcase classname="Component Tests User Management Update Component OnInit Should load authorities and language on init" name="Component Tests User Management Update Component OnInit Should load authorities and language on init" time="0.028">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call update service on save for existing user" name="Component Tests User Management Update Component save Should call update service on save for existing user" time="0.021">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call create service on save for new user" name="Component Tests User Management Update Component save Should call create service on save for new user" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:04" time="1.689" tests="5">
    <testcase classname="Component Tests PasswordResetFinishComponent should define its initial state" name="Component Tests PasswordResetFinishComponent should define its initial state" time="0.057">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" name="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" time="0.032">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" name="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" time="0.033">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should update success to true after resetting password" name="Component Tests PasswordResetFinishComponent should update success to true after resetting password" time="0.041">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should notify of generic error" name="Component Tests PasswordResetFinishComponent should notify of generic error" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:04" time="1.529" tests="5">
    <testcase classname="Service Tests Emplacement Service Service methods should find an element" name="Service Tests Emplacement Service Service methods should find an element" time="0.026">
    </testcase>
    <testcase classname="Service Tests Emplacement Service Service methods should create a Emplacement" name="Service Tests Emplacement Service Service methods should create a Emplacement" time="0.015">
    </testcase>
    <testcase classname="Service Tests Emplacement Service Service methods should update a Emplacement" name="Service Tests Emplacement Service Service methods should update a Emplacement" time="0.021">
    </testcase>
    <testcase classname="Service Tests Emplacement Service Service methods should return a list of Emplacement" name="Service Tests Emplacement Service Service methods should return a list of Emplacement" time="0.018">
    </testcase>
    <testcase classname="Service Tests Emplacement Service Service methods should delete a Emplacement" name="Service Tests Emplacement Service Service methods should delete a Emplacement" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:06" time="1.21" tests="5">
    <testcase classname="Service Tests Department Service Service methods should find an element" name="Service Tests Department Service Service methods should find an element" time="0.018">
    </testcase>
    <testcase classname="Service Tests Department Service Service methods should create a Department" name="Service Tests Department Service Service methods should create a Department" time="0.019">
    </testcase>
    <testcase classname="Service Tests Department Service Service methods should update a Department" name="Service Tests Department Service Service methods should update a Department" time="0.013">
    </testcase>
    <testcase classname="Service Tests Department Service Service methods should return a list of Department" name="Service Tests Department Service Service methods should return a list of Department" time="0.016">
    </testcase>
    <testcase classname="Service Tests Department Service Service methods should delete a Department" name="Service Tests Department Service Service methods should delete a Department" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:06" time="1.202" tests="5">
    <testcase classname="Service Tests Exemplaire Service Service methods should find an element" name="Service Tests Exemplaire Service Service methods should find an element" time="0.019">
    </testcase>
    <testcase classname="Service Tests Exemplaire Service Service methods should create a Exemplaire" name="Service Tests Exemplaire Service Service methods should create a Exemplaire" time="0.013">
    </testcase>
    <testcase classname="Service Tests Exemplaire Service Service methods should update a Exemplaire" name="Service Tests Exemplaire Service Service methods should update a Exemplaire" time="0.012">
    </testcase>
    <testcase classname="Service Tests Exemplaire Service Service methods should return a list of Exemplaire" name="Service Tests Exemplaire Service Service methods should return a list of Exemplaire" time="0.012">
    </testcase>
    <testcase classname="Service Tests Exemplaire Service Service methods should delete a Exemplaire" name="Service Tests Exemplaire Service Service methods should delete a Exemplaire" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:07" time="1.481" tests="5">
    <testcase classname="Service Tests Job Service Service methods should find an element" name="Service Tests Job Service Service methods should find an element" time="0.023">
    </testcase>
    <testcase classname="Service Tests Job Service Service methods should create a Job" name="Service Tests Job Service Service methods should create a Job" time="0.02">
    </testcase>
    <testcase classname="Service Tests Job Service Service methods should update a Job" name="Service Tests Job Service Service methods should update a Job" time="0.021">
    </testcase>
    <testcase classname="Service Tests Job Service Service methods should return a list of Job" name="Service Tests Job Service Service methods should return a list of Job" time="0.016">
    </testcase>
    <testcase classname="Service Tests Job Service Service methods should delete a Job" name="Service Tests Job Service Service methods should delete a Job" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:07" time="1.471" tests="5">
    <testcase classname="Service Tests Task Service Service methods should find an element" name="Service Tests Task Service Service methods should find an element" time="0.019">
    </testcase>
    <testcase classname="Service Tests Task Service Service methods should create a Task" name="Service Tests Task Service Service methods should create a Task" time="0.014">
    </testcase>
    <testcase classname="Service Tests Task Service Service methods should update a Task" name="Service Tests Task Service Service methods should update a Task" time="0.017">
    </testcase>
    <testcase classname="Service Tests Task Service Service methods should return a list of Task" name="Service Tests Task Service Service methods should return a list of Task" time="0.014">
    </testcase>
    <testcase classname="Service Tests Task Service Service methods should delete a Task" name="Service Tests Task Service Service methods should delete a Task" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:08" time="1.151" tests="5">
    <testcase classname="Service Tests Country Service Service methods should find an element" name="Service Tests Country Service Service methods should find an element" time="0.023">
    </testcase>
    <testcase classname="Service Tests Country Service Service methods should create a Country" name="Service Tests Country Service Service methods should create a Country" time="0.022">
    </testcase>
    <testcase classname="Service Tests Country Service Service methods should update a Country" name="Service Tests Country Service Service methods should update a Country" time="0.013">
    </testcase>
    <testcase classname="Service Tests Country Service Service methods should return a list of Country" name="Service Tests Country Service Service methods should return a list of Country" time="0.026">
    </testcase>
    <testcase classname="Service Tests Country Service Service methods should delete a Country" name="Service Tests Country Service Service methods should delete a Country" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:09" time="1.111" tests="5">
    <testcase classname="Service Tests Region Service Service methods should find an element" name="Service Tests Region Service Service methods should find an element" time="0.017">
    </testcase>
    <testcase classname="Service Tests Region Service Service methods should create a Region" name="Service Tests Region Service Service methods should create a Region" time="0.014">
    </testcase>
    <testcase classname="Service Tests Region Service Service methods should update a Region" name="Service Tests Region Service Service methods should update a Region" time="0.016">
    </testcase>
    <testcase classname="Service Tests Region Service Service methods should return a list of Region" name="Service Tests Region Service Service methods should return a list of Region" time="0.017">
    </testcase>
    <testcase classname="Service Tests Region Service Service methods should delete a Region" name="Service Tests Region Service Service methods should delete a Region" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:10" time="1.155" tests="5">
    <testcase classname="Service Tests Auteur Service Service methods should find an element" name="Service Tests Auteur Service Service methods should find an element" time="0.03">
    </testcase>
    <testcase classname="Service Tests Auteur Service Service methods should create a Auteur" name="Service Tests Auteur Service Service methods should create a Auteur" time="0.025">
    </testcase>
    <testcase classname="Service Tests Auteur Service Service methods should update a Auteur" name="Service Tests Auteur Service Service methods should update a Auteur" time="0.019">
    </testcase>
    <testcase classname="Service Tests Auteur Service Service methods should return a list of Auteur" name="Service Tests Auteur Service Service methods should return a list of Auteur" time="0.017">
    </testcase>
    <testcase classname="Service Tests Auteur Service Service methods should delete a Auteur" name="Service Tests Auteur Service Service methods should delete a Auteur" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:10" time="1.169" tests="5">
    <testcase classname="Service Tests Theme Service Service methods should find an element" name="Service Tests Theme Service Service methods should find an element" time="0.018">
    </testcase>
    <testcase classname="Service Tests Theme Service Service methods should create a Theme" name="Service Tests Theme Service Service methods should create a Theme" time="0.026">
    </testcase>
    <testcase classname="Service Tests Theme Service Service methods should update a Theme" name="Service Tests Theme Service Service methods should update a Theme" time="0.025">
    </testcase>
    <testcase classname="Service Tests Theme Service Service methods should return a list of Theme" name="Service Tests Theme Service Service methods should return a list of Theme" time="0.014">
    </testcase>
    <testcase classname="Service Tests Theme Service Service methods should delete a Theme" name="Service Tests Theme Service Service methods should delete a Theme" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:11" time="1.619" tests="4">
    <testcase classname="Component Tests PasswordComponent should show error if passwords do not match" name="Component Tests PasswordComponent should show error if passwords do not match" time="0.039">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should call Auth.changePassword when passwords match" name="Component Tests PasswordComponent should call Auth.changePassword when passwords match" time="0.027">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should set success to true upon success" name="Component Tests PasswordComponent should set success to true upon success" time="0.034">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should notify of error if change password fails" name="Component Tests PasswordComponent should notify of error if change password fails" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:11" time="2.204" tests="4">
    <testcase classname="Component Tests Job Management Component Should call load all on init" name="Component Tests Job Management Component Should call load all on init" time="0.169">
    </testcase>
    <testcase classname="Component Tests Job Management Component should load a page" name="Component Tests Job Management Component should load a page" time="0.075">
    </testcase>
    <testcase classname="Component Tests Job Management Component should calculate the sort attribute for an id" name="Component Tests Job Management Component should calculate the sort attribute for an id" time="0.074">
    </testcase>
    <testcase classname="Component Tests Job Management Component should calculate the sort attribute for a non-id attribute" name="Component Tests Job Management Component should calculate the sort attribute for a non-id attribute" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:12" time="2.04" tests="2">
    <testcase classname="Component Tests User Management Component OnInit Should call load all on init" name="Component Tests User Management Component OnInit Should call load all on init" time="0.038">
    </testcase>
    <testcase classname="Component Tests User Management Component setActive Should update user and call load all" name="Component Tests User Management Component setActive Should update user and call load all" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:13" time="1.435" tests="3">
    <testcase classname="Component Tests SettingsComponent should send the current identity upon save" name="Component Tests SettingsComponent should send the current identity upon save" time="0.039">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of success upon successful save" name="Component Tests SettingsComponent should notify of success upon successful save" time="0.027">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of error upon failed save" name="Component Tests SettingsComponent should notify of error upon failed save" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:15" time="1.426" tests="4">
    <testcase classname="Service Tests User Service Service methods should call correct URL" name="Service Tests User Service Service methods should call correct URL" time="0.036">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return User" name="Service Tests User Service Service methods should return User" time="0.026">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return Authorities" name="Service Tests User Service Service methods should return Authorities" time="0.037">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should propagate not found response" name="Service Tests User Service Service methods should propagate not found response" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:15" time="1.927" tests="3">
    <testcase classname="Component Tests LogsComponent OnInit should set all default values correctly" name="Component Tests LogsComponent OnInit should set all default values correctly" time="0.041">
    </testcase>
    <testcase classname="Component Tests LogsComponent OnInit Should call load all on init" name="Component Tests LogsComponent OnInit Should call load all on init" time="0.028">
    </testcase>
    <testcase classname="Component Tests LogsComponent change log level should change log level correctly" name="Component Tests LogsComponent change log level should change log level correctly" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:16" time="1.268" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.038">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the config" name="Service Tests Logs Service Service methods should get the config" time="0.018">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the env" name="Service Tests Logs Service Service methods should get the env" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:17" time="1.115" tests="3">
    <testcase classname="Service Tests Audits Service Service methods should call correct URL" name="Service Tests Audits Service Service methods should call correct URL" time="0.021">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should return Audits" name="Service Tests Audits Service Service methods should return Audits" time="0.023">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should propagate not found response" name="Service Tests Audits Service Service methods should propagate not found response" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:17" time="1.278" tests="2">
    <testcase classname="Component Tests Emplacement Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Emplacement Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.062">
    </testcase>
    <testcase classname="Component Tests Emplacement Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Emplacement Management Delete Component confirmDelete Should not call delete service on clear" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:18" time="1.119" tests="2">
    <testcase classname="Component Tests JobHistory Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests JobHistory Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.069">
    </testcase>
    <testcase classname="Component Tests JobHistory Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests JobHistory Management Delete Component confirmDelete Should not call delete service on clear" time="0.076">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:19" time="1.64" tests="2">
    <testcase classname="Component Tests Exemplaire Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Exemplaire Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.06">
    </testcase>
    <testcase classname="Component Tests Exemplaire Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Exemplaire Management Delete Component confirmDelete Should not call delete service on clear" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:19" time="1.734" tests="2">
    <testcase classname="Component Tests Department Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Department Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.077">
    </testcase>
    <testcase classname="Component Tests Department Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Department Management Delete Component confirmDelete Should not call delete service on clear" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:20" time="1.386" tests="2">
    <testcase classname="Component Tests Location Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Location Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.052">
    </testcase>
    <testcase classname="Component Tests Location Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Location Management Delete Component confirmDelete Should not call delete service on clear" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:21" time="1.005" tests="2">
    <testcase classname="Component Tests Employee Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Employee Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.052">
    </testcase>
    <testcase classname="Component Tests Employee Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Employee Management Delete Component confirmDelete Should not call delete service on clear" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:22" time="1.14" tests="2">
    <testcase classname="Component Tests Emprunt Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Emprunt Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.041">
    </testcase>
    <testcase classname="Component Tests Emprunt Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Emprunt Management Delete Component confirmDelete Should not call delete service on clear" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:22" time="1.12" tests="2">
    <testcase classname="Component Tests Country Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Country Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.044">
    </testcase>
    <testcase classname="Component Tests Country Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Country Management Delete Component confirmDelete Should not call delete service on clear" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:23" time="1.354" tests="2">
    <testcase classname="Component Tests Region Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Region Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.056">
    </testcase>
    <testcase classname="Component Tests Region Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Region Management Delete Component confirmDelete Should not call delete service on clear" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:23" time="1.396" tests="2">
    <testcase classname="Component Tests Auteur Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Auteur Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.051">
    </testcase>
    <testcase classname="Component Tests Auteur Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Auteur Management Delete Component confirmDelete Should not call delete service on clear" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:24" time="1.479" tests="2">
    <testcase classname="Component Tests Theme Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Theme Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.048">
    </testcase>
    <testcase classname="Component Tests Theme Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Theme Management Delete Component confirmDelete Should not call delete service on clear" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:25" time="1.466" tests="2">
    <testcase classname="Component Tests Livre Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Livre Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.059">
    </testcase>
    <testcase classname="Component Tests Livre Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Livre Management Delete Component confirmDelete Should not call delete service on clear" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:26" time="1.216" tests="2">
    <testcase classname="Component Tests Task Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Task Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.075">
    </testcase>
    <testcase classname="Component Tests Task Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Task Management Delete Component confirmDelete Should not call delete service on clear" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:26" time="1.773" tests="3">
    <testcase classname="Component Tests HealthComponent getBadgeClass should get badge class" name="Component Tests HealthComponent getBadgeClass should get badge class" time="0.05">
    </testcase>
    <testcase classname="Component Tests HealthComponent refresh should call refresh on init" name="Component Tests HealthComponent refresh should call refresh on init" time="0.033">
    </testcase>
    <testcase classname="Component Tests HealthComponent refresh should handle a 503 on refreshing health data" name="Component Tests HealthComponent refresh should handle a 503 on refreshing health data" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:28" time="1.361" tests="2">
    <testcase classname="Component Tests Job Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Job Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.096">
    </testcase>
    <testcase classname="Component Tests Job Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Job Management Delete Component confirmDelete Should not call delete service on clear" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:28" time="1.695" tests="3">
    <testcase classname="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" name="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" time="0.034">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" name="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" time="0.018">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent no notification of success upon error response" name="Component Tests PasswordResetInitComponent no notification of success upon error response" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:29" time="1.454" tests="2">
    <testcase classname="Component Tests Emplacement Management Update Component save Should call update service on save for existing entity" name="Component Tests Emplacement Management Update Component save Should call update service on save for existing entity" time="0.057">
    </testcase>
    <testcase classname="Component Tests Emplacement Management Update Component save Should call create service on save for new entity" name="Component Tests Emplacement Management Update Component save Should call create service on save for new entity" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:30" time="2.069" tests="2">
    <testcase classname="Component Tests JobHistory Management Update Component save Should call update service on save for existing entity" name="Component Tests JobHistory Management Update Component save Should call update service on save for existing entity" time="0.111">
    </testcase>
    <testcase classname="Component Tests JobHistory Management Update Component save Should call create service on save for new entity" name="Component Tests JobHistory Management Update Component save Should call create service on save for new entity" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:30" time="1.757" tests="2">
    <testcase classname="Component Tests Exemplaire Management Update Component save Should call update service on save for existing entity" name="Component Tests Exemplaire Management Update Component save Should call update service on save for existing entity" time="0.075">
    </testcase>
    <testcase classname="Component Tests Exemplaire Management Update Component save Should call create service on save for new entity" name="Component Tests Exemplaire Management Update Component save Should call create service on save for new entity" time="0.082">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:32" time="1.86" tests="2">
    <testcase classname="Component Tests Department Management Update Component save Should call update service on save for existing entity" name="Component Tests Department Management Update Component save Should call update service on save for existing entity" time="0.049">
    </testcase>
    <testcase classname="Component Tests Department Management Update Component save Should call create service on save for new entity" name="Component Tests Department Management Update Component save Should call create service on save for new entity" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:32" time="1.75" tests="2">
    <testcase classname="Component Tests Location Management Update Component save Should call update service on save for existing entity" name="Component Tests Location Management Update Component save Should call update service on save for existing entity" time="0.053">
    </testcase>
    <testcase classname="Component Tests Location Management Update Component save Should call create service on save for new entity" name="Component Tests Location Management Update Component save Should call create service on save for new entity" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:34" time="1.617" tests="2">
    <testcase classname="Component Tests Employee Management Update Component save Should call update service on save for existing entity" name="Component Tests Employee Management Update Component save Should call update service on save for existing entity" time="0.079">
    </testcase>
    <testcase classname="Component Tests Employee Management Update Component save Should call create service on save for new entity" name="Component Tests Employee Management Update Component save Should call create service on save for new entity" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:34" time="1.43" tests="1">
    <testcase classname="Component Tests ConfigurationComponent OnInit Should call load all on init" name="Component Tests ConfigurationComponent OnInit Should call load all on init" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:35" time="1.785" tests="2">
    <testcase classname="Component Tests Emprunt Management Update Component save Should call update service on save for existing entity" name="Component Tests Emprunt Management Update Component save Should call update service on save for existing entity" time="0.047">
    </testcase>
    <testcase classname="Component Tests Emprunt Management Update Component save Should call create service on save for new entity" name="Component Tests Emprunt Management Update Component save Should call create service on save for new entity" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:36" time="1.699" tests="2">
    <testcase classname="Component Tests Country Management Update Component save Should call update service on save for existing entity" name="Component Tests Country Management Update Component save Should call update service on save for existing entity" time="0.044">
    </testcase>
    <testcase classname="Component Tests Country Management Update Component save Should call create service on save for new entity" name="Component Tests Country Management Update Component save Should call create service on save for new entity" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:37" time="1.284" tests="2">
    <testcase classname="Component Tests Region Management Update Component save Should call update service on save for existing entity" name="Component Tests Region Management Update Component save Should call update service on save for existing entity" time="0.079">
    </testcase>
    <testcase classname="Component Tests Region Management Update Component save Should call create service on save for new entity" name="Component Tests Region Management Update Component save Should call create service on save for new entity" time="0.09">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:37" time="1.497" tests="2">
    <testcase classname="Component Tests Auteur Management Update Component save Should call update service on save for existing entity" name="Component Tests Auteur Management Update Component save Should call update service on save for existing entity" time="0.075">
    </testcase>
    <testcase classname="Component Tests Auteur Management Update Component save Should call create service on save for new entity" name="Component Tests Auteur Management Update Component save Should call create service on save for new entity" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:39" time="1.739" tests="3">
    <testcase classname="Component Tests ActivateComponent calls activate.get with the key from params" name="Component Tests ActivateComponent calls activate.get with the key from params" time="0.036">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set success to true upon successful activation" name="Component Tests ActivateComponent should set set success to true upon successful activation" time="0.025">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set error to true upon activation failure" name="Component Tests ActivateComponent should set set error to true upon activation failure" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:39" time="1.657" tests="2">
    <testcase classname="Component Tests Theme Management Update Component save Should call update service on save for existing entity" name="Component Tests Theme Management Update Component save Should call update service on save for existing entity" time="0.067">
    </testcase>
    <testcase classname="Component Tests Theme Management Update Component save Should call create service on save for new entity" name="Component Tests Theme Management Update Component save Should call create service on save for new entity" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:41" time="0.882" tests="1">
    <testcase classname="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:40" time="1.293" tests="2">
    <testcase classname="Component Tests Livre Management Update Component save Should call update service on save for existing entity" name="Component Tests Livre Management Update Component save Should call update service on save for existing entity" time="0.047">
    </testcase>
    <testcase classname="Component Tests Livre Management Update Component save Should call create service on save for new entity" name="Component Tests Livre Management Update Component save Should call create service on save for new entity" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:42" time="1.557" tests="2">
    <testcase classname="Component Tests Task Management Update Component save Should call update service on save for existing entity" name="Component Tests Task Management Update Component save Should call update service on save for existing entity" time="0.049">
    </testcase>
    <testcase classname="Component Tests Task Management Update Component save Should call create service on save for new entity" name="Component Tests Task Management Update Component save Should call create service on save for new entity" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:42" time="1.668" tests="2">
    <testcase classname="Component Tests Job Management Update Component save Should call update service on save for existing entity" name="Component Tests Job Management Update Component save Should call update service on save for existing entity" time="0.089">
    </testcase>
    <testcase classname="Component Tests Job Management Update Component save Should call create service on save for new entity" name="Component Tests Job Management Update Component save Should call create service on save for new entity" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:43" time="1.315" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.021">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Metrics" name="Service Tests Logs Service Service methods should return Metrics" time="0.013">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Thread Dump" name="Service Tests Logs Service Service methods should return Thread Dump" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:43" time="1.465" tests="3">
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" time="0.03">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" time="0.027">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:45" time="1.039" tests="1">
    <testcase classname="Component Tests User Management Detail Component OnInit Should call load all on init" name="Component Tests User Management Detail Component OnInit Should call load all on init" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:45" time="1.593" tests="2">
    <testcase classname="Component Tests Navbar Component Should call profileService.getProfileInfo on init" name="Component Tests Navbar Component Should call profileService.getProfileInfo on init" time="0.059">
    </testcase>
    <testcase classname="Component Tests Navbar Component Should call accountService.isAuthenticated on authentication" name="Component Tests Navbar Component Should call accountService.isAuthenticated on authentication" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:46" time="1.548" tests="3">
    <testcase classname="Component Tests Home Component Should call accountService.getAuthenticationState on init" name="Component Tests Home Component Should call accountService.getAuthenticationState on init" time="0.045">
    </testcase>
    <testcase classname="Component Tests Home Component Should call accountService.isAuthenticated when it checks authentication" name="Component Tests Home Component Should call accountService.isAuthenticated when it checks authentication" time="0.049">
    </testcase>
    <testcase classname="Component Tests Home Component Should call loginModalService.open on login" name="Component Tests Home Component Should call loginModalService.open on login" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:47" time="1.578" tests="1">
    <testcase classname="Component Tests Emplacement Management Component Should call load all on init" name="Component Tests Emplacement Management Component Should call load all on init" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:47" time="1.347" tests="1">
    <testcase classname="Component Tests Exemplaire Management Component Should call load all on init" name="Component Tests Exemplaire Management Component Should call load all on init" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:48" time="1.114" tests="1">
    <testcase classname="Component Tests Department Management Component Should call load all on init" name="Component Tests Department Management Component Should call load all on init" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:49" time="1.102" tests="1">
    <testcase classname="Component Tests Location Management Component Should call load all on init" name="Component Tests Location Management Component Should call load all on init" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:49" time="1.434" tests="1">
    <testcase classname="Component Tests Country Management Component Should call load all on init" name="Component Tests Country Management Component Should call load all on init" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:50" time="1.418" tests="1">
    <testcase classname="Component Tests Emprunt Management Component Should call load all on init" name="Component Tests Emprunt Management Component Should call load all on init" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:51" time="1.11" tests="1">
    <testcase classname="Component Tests Region Management Component Should call load all on init" name="Component Tests Region Management Component Should call load all on init" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:51" time="1.11" tests="1">
    <testcase classname="Component Tests Auteur Management Component Should call load all on init" name="Component Tests Auteur Management Component Should call load all on init" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:52" time="1.071" tests="1">
    <testcase classname="Component Tests Theme Management Component Should call load all on init" name="Component Tests Theme Management Component Should call load all on init" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:53" time="1.092" tests="1">
    <testcase classname="Component Tests Livre Management Component Should call load all on init" name="Component Tests Livre Management Component Should call load all on init" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:53" time="1.426" tests="1">
    <testcase classname="Component Tests MetricsComponent refresh should call refresh on init" name="Component Tests MetricsComponent refresh should call refresh on init" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:54" time="1.383" tests="1">
    <testcase classname="Component Tests Task Management Component Should call load all on init" name="Component Tests Task Management Component Should call load all on init" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:55" time="1.266" tests="2">
    <testcase classname="Service Tests Login Modal Service Service methods Should call open method for NgbModal when open method is called" name="Service Tests Login Modal Service Service methods Should call open method for NgbModal when open method is called" time="0.023">
    </testcase>
    <testcase classname="Service Tests Login Modal Service Service methods Should call open method for NgbModal one time when open method is called twice" name="Service Tests Login Modal Service Service methods Should call open method for NgbModal one time when open method is called twice" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:55" time="1.153" tests="2">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.018">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should change log level" name="Service Tests Logs Service Service methods should change log level" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:56" time="1.072" tests="1">
    <testcase classname="Component Tests Emplacement Management Detail Component OnInit Should load emplacement on init" name="Component Tests Emplacement Management Detail Component OnInit Should load emplacement on init" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:56" time="1.034" tests="1">
    <testcase classname="Component Tests JobHistory Management Detail Component OnInit Should load jobHistory on init" name="Component Tests JobHistory Management Detail Component OnInit Should load jobHistory on init" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:57" time="1.321" tests="1">
    <testcase classname="Component Tests Exemplaire Management Detail Component OnInit Should load exemplaire on init" name="Component Tests Exemplaire Management Detail Component OnInit Should load exemplaire on init" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:57" time="1.489" tests="1">
    <testcase classname="Component Tests Department Management Detail Component OnInit Should load department on init" name="Component Tests Department Management Detail Component OnInit Should load department on init" time="0.076">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:59" time="1.511" tests="1">
    <testcase classname="Component Tests Location Management Detail Component OnInit Should load location on init" name="Component Tests Location Management Detail Component OnInit Should load location on init" time="0.071">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:32:59" time="1.385" tests="1">
    <testcase classname="Component Tests Employee Management Detail Component OnInit Should load employee on init" name="Component Tests Employee Management Detail Component OnInit Should load employee on init" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:00" time="1.07" tests="1">
    <testcase classname="Component Tests Emprunt Management Detail Component OnInit Should load emprunt on init" name="Component Tests Emprunt Management Detail Component OnInit Should load emprunt on init" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:00" time="1.084" tests="1">
    <testcase classname="Component Tests Country Management Detail Component OnInit Should load country on init" name="Component Tests Country Management Detail Component OnInit Should load country on init" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:01" time="1.422" tests="1">
    <testcase classname="Component Tests Region Management Detail Component OnInit Should load region on init" name="Component Tests Region Management Detail Component OnInit Should load region on init" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:02" time="1.484" tests="1">
    <testcase classname="Component Tests Auteur Management Detail Component OnInit Should load auteur on init" name="Component Tests Auteur Management Detail Component OnInit Should load auteur on init" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:03" time="1.608" tests="1">
    <testcase classname="Component Tests Theme Management Detail Component OnInit Should load theme on init" name="Component Tests Theme Management Detail Component OnInit Should load theme on init" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:03" time="1.539" tests="1">
    <testcase classname="Component Tests Livre Management Detail Component OnInit Should load livre on init" name="Component Tests Livre Management Detail Component OnInit Should load livre on init" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:04" time="1.046" tests="1">
    <testcase classname="Component Tests Task Management Detail Component OnInit Should load task on init" name="Component Tests Task Management Detail Component OnInit Should load task on init" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:05" time="1.264" tests="1">
    <testcase classname="Component Tests Job Management Detail Component OnInit Should load job on init" name="Component Tests Job Management Detail Component OnInit Should load job on init" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-03T16:33:06" time="1.772" tests="2">
    <testcase classname="Component Tests Alert Component Should call alertService.get on init" name="Component Tests Alert Component Should call alertService.get on init" time="0.028">
    </testcase>
    <testcase classname="Component Tests Alert Component Should call alertService.clear on destroy" name="Component Tests Alert Component Should call alertService.clear on destroy" time="0.017">
    </testcase>
  </testsuite>
</testsuites>