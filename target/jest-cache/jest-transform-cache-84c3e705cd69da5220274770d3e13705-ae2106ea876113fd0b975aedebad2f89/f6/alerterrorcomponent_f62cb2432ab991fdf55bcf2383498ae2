b1dc50e7a39e7020d350797bea2f5841
"use strict";

/* istanbul ignore next */
function cov_2dypimjhba() {
  var path = "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\jhdemo\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts";
  var hash = "70b200b998216de9b796e7e0da0d9cf4a2bd6966";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\jhdemo\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "6": {
        start: {
          line: 8,
          column: 26
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 25
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 16,
          column: 11
        }
      },
      "11": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "12": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 95
        }
      },
      "13": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "14": {
        start: {
          line: 18,
          column: 38
        },
        end: {
          line: 18,
          column: 54
        }
      },
      "15": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "16": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 93
        }
      },
      "17": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 26
        }
      },
      "18": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 25,
          column: 64
        }
      },
      "19": {
        start: {
          line: 26,
          column: 38
        },
        end: {
          line: 26,
          column: 42
        }
      },
      "20": {
        start: {
          line: 27,
          column: 36
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "21": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "22": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 34,
          column: 25
        }
      },
      "23": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 79
        }
      },
      "24": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 34,
          column: 25
        }
      },
      "25": {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 33,
          column: 77
        }
      },
      "26": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "27": {
        start: {
          line: 37,
          column: 43
        },
        end: {
          line: 37,
          column: 104
        }
      },
      "28": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 38,
          column: 85
        }
      },
      "29": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "30": {
        start: {
          line: 41,
          column: 44
        },
        end: {
          line: 41,
          column: 79
        }
      },
      "31": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "32": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 45,
          column: 29
        }
      },
      "33": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 60
        }
      },
      "34": {
        start: {
          line: 47,
          column: 51
        },
        end: {
          line: 47,
          column: 93
        }
      },
      "35": {
        start: {
          line: 48,
          column: 46
        },
        end: {
          line: 48,
          column: 131
        }
      },
      "36": {
        start: {
          line: 49,
          column: 28
        },
        end: {
          line: 49,
          column: 131
        }
      },
      "37": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "38": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 141
        }
      },
      "39": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 68
        }
      },
      "40": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 26
        }
      },
      "41": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "42": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 26
        }
      },
      "43": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 69,
          column: 21
        }
      },
      "44": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 76
        }
      },
      "45": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 68
        }
      },
      "46": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 61
        }
      },
      "47": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "48": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 89
        }
      },
      "49": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 23
        }
      },
      "50": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "51": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 58
        }
      },
      "52": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "53": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 62
        }
      },
      "54": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 54
        }
      },
      "55": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "56": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 76
        }
      },
      "57": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 92
        }
      },
      "58": {
        start: {
          line: 106,
          column: 0
        },
        end: {
          line: 118,
          column: 24
        }
      },
      "59": {
        start: {
          line: 119,
          column: 0
        },
        end: {
          line: 119,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 62
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 71
          },
          end: {
            line: 13,
            column: 72
          }
        },
        loc: {
          start: {
            line: 13,
            column: 85
          },
          end: {
            line: 16,
            column: 9
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 79
          },
          end: {
            line: 17,
            column: 80
          }
        },
        loc: {
          start: {
            line: 17,
            column: 93
          },
          end: {
            line: 71,
            column: 9
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 35,
            column: 21
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 22
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 88
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 17
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 23,
            column: 26
          }
        }, {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        }, {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 62,
            column: 26
          }
        }, {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 69,
            column: 21
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 34,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 34,
            column: 25
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 34,
            column: 25
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 34,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 34,
            column: 25
          }
        }, {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 34,
            column: 25
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        }, {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 57,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 57,
            column: 21
          }
        }, {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 57,
            column: 21
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 59
          }
        }, {
          start: {
            line: 40,
            column: 63
          },
          end: {
            line: 40,
            column: 98
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 45,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 45,
            column: 29
          }
        }, {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 45,
            column: 29
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 57,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 57,
            column: 21
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 57,
            column: 21
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 52,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 52,
            column: 59
          }
        }, {
          start: {
            line: 52,
            column: 63
          },
          end: {
            line: 52,
            column: 94
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 69,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 69,
            column: 21
          }
        }, {
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 69,
            column: 21
          }
        }],
        line: 64
      },
      "10": {
        loc: {
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 64,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 64,
            column: 54
          }
        }, {
          start: {
            line: 64,
            column: 58
          },
          end: {
            line: 64,
            column: 89
          }
        }],
        line: 64
      },
      "11": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }],
        line: 75
      },
      "12": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }],
        line: 81
      },
      "13": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }],
        line: 84
      },
      "14": {
        loc: {
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 89,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 40
          },
          end: {
            line: 89,
            column: 43
          }
        }, {
          start: {
            line: 89,
            column: 46
          },
          end: {
            line: 89,
            column: 53
          }
        }],
        line: 89
      },
      "15": {
        loc: {
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 89,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 89,
            column: 21
          }
        }, {
          start: {
            line: 89,
            column: 25
          },
          end: {
            line: 89,
            column: 37
          }
        }],
        line: 89
      },
      "16": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 55
          },
          end: {
            line: 103,
            column: 61
          }
        }, {
          start: {
            line: 103,
            column: 64
          },
          end: {
            line: 103,
            column: 91
          }
        }],
        line: 103
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 35
          }
        }, {
          start: {
            line: 103,
            column: 39
          },
          end: {
            line: 103,
            column: 52
          }
        }],
        line: 103
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\jhdemo\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Dass\\Desktop\\Master1_YNOV\\DevLogiciel\\jhdemo\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts"],
      sourcesContent: ["import { Component, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { JhiEventManager, JhiAlert, JhiAlertService, JhiEventWithContent } from 'ng-jhipster';\nimport { Subscription } from 'rxjs';\n\nimport { AlertError } from './alert-error.model';\n\n@Component({\n  selector: 'jhi-alert-error',\n  template: ` <div class=\"alerts\" role=\"alert\">\n    <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\n      <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"close(alert)\">\n        <pre [innerHTML]=\"alert.msg\"></pre>\n      </ngb-alert>\n    </div>\n  </div>`,\n})\nexport class AlertErrorComponent implements OnDestroy {\n  alerts: JhiAlert[] = [];\n  errorListener: Subscription;\n  httpErrorListener: Subscription;\n\n  constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager, translateService: TranslateService) {\n    this.errorListener = eventManager.subscribe('jhdemoApp.error', (response: JhiEventWithContent<AlertError>) => {\n      const errorResponse = response.content;\n      this.addErrorAlert(errorResponse.message, errorResponse.key, errorResponse.params);\n    });\n\n    this.httpErrorListener = eventManager.subscribe('jhdemoApp.httpError', (response: JhiEventWithContent<HttpErrorResponse>) => {\n      const httpErrorResponse = response.content;\n      switch (httpErrorResponse.status) {\n        // connection refused, server not reachable\n        case 0:\n          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400: {\n          const arr = httpErrorResponse.headers.keys();\n          let errorHeader = null;\n          let entityKey = null;\n          arr.forEach(entry => {\n            if (entry.toLowerCase().endsWith('app-error')) {\n              errorHeader = httpErrorResponse.headers.get(entry);\n            } else if (entry.toLowerCase().endsWith('app-params')) {\n              entityKey = httpErrorResponse.headers.get(entry);\n            }\n          });\n          if (errorHeader) {\n            const entityName = translateService.instant('global.menu.entities.' + entityKey);\n            this.addErrorAlert(errorHeader, errorHeader, { entityName });\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\n            for (const fieldError of fieldErrors) {\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                fieldError.message = 'Size';\n              }\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName = translateService.instant('jhdemoApp.' + fieldError.objectName + '.' + convertedField);\n              this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName });\n            }\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n          break;\n        }\n\n        case 404:\n          this.addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n      }\n    });\n  }\n\n  setClasses(alert: JhiAlert): { [key: string]: boolean } {\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\n    if (alert.position) {\n      return { ...classes, [alert.position]: true };\n    }\n    return classes;\n  }\n\n  ngOnDestroy(): void {\n    if (this.errorListener) {\n      this.eventManager.destroy(this.errorListener);\n    }\n    if (this.httpErrorListener) {\n      this.eventManager.destroy(this.httpErrorListener);\n    }\n  }\n\n  addErrorAlert(message: string, key?: string, data?: any): void {\n    message = key && key !== null ? key : message;\n\n    const newAlert: JhiAlert = {\n      type: 'danger',\n      msg: message,\n      params: data,\n      timeout: 5000,\n      toast: this.alertService.isToast(),\n      scoped: true,\n    };\n\n    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));\n  }\n\n  close(alert: JhiAlert): void {\n    // NOSONAR can be removed after https://github.com/SonarSource/SonarJS/issues/1930 is resolved\n    alert.close?.(this.alerts); // NOSONAR\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "70b200b998216de9b796e7e0da0d9cf4a2bd6966"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2dypimjhba = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2dypimjhba();
cov_2dypimjhba().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2dypimjhba().s[1]++;
exports.AlertErrorComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2dypimjhba().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_2dypimjhba().s[3]++, require("@angular/core"));
const core_2 =
/* istanbul ignore next */
(cov_2dypimjhba().s[4]++, require("@ngx-translate/core"));
const ng_jhipster_1 =
/* istanbul ignore next */
(cov_2dypimjhba().s[5]++, require("ng-jhipster"));

/* istanbul ignore next */
cov_2dypimjhba().s[6]++;
let AlertErrorComponent = class AlertErrorComponent {
  constructor(alertService, eventManager, translateService) {
    /* istanbul ignore next */
    cov_2dypimjhba().f[0]++;
    cov_2dypimjhba().s[7]++;
    this.alertService = alertService;

    /* istanbul ignore next */
    cov_2dypimjhba().s[8]++;
    this.eventManager = eventManager;

    /* istanbul ignore next */
    cov_2dypimjhba().s[9]++;
    this.alerts = [];

    /* istanbul ignore next */
    cov_2dypimjhba().s[10]++;
    this.errorListener = eventManager.subscribe('jhdemoApp.error', response => {
      /* istanbul ignore next */
      cov_2dypimjhba().f[1]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_2dypimjhba().s[11]++, response.content);

      /* istanbul ignore next */
      cov_2dypimjhba().s[12]++;
      this.addErrorAlert(errorResponse.message, errorResponse.key, errorResponse.params);
    });

    /* istanbul ignore next */
    cov_2dypimjhba().s[13]++;
    this.httpErrorListener = eventManager.subscribe('jhdemoApp.httpError', response => {
      /* istanbul ignore next */
      cov_2dypimjhba().f[2]++;
      const httpErrorResponse =
      /* istanbul ignore next */
      (cov_2dypimjhba().s[14]++, response.content);

      /* istanbul ignore next */
      cov_2dypimjhba().s[15]++;

      switch (httpErrorResponse.status) {
        // connection refused, server not reachable
        case 0:
          /* istanbul ignore next */
          cov_2dypimjhba().b[0][0]++;
          cov_2dypimjhba().s[16]++;
          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');

          /* istanbul ignore next */
          cov_2dypimjhba().s[17]++;
          break;

        case 400:
          /* istanbul ignore next */
          cov_2dypimjhba().b[0][1]++;
          {
            const arr =
            /* istanbul ignore next */
            (cov_2dypimjhba().s[18]++, httpErrorResponse.headers.keys());
            let errorHeader =
            /* istanbul ignore next */
            (cov_2dypimjhba().s[19]++, null);
            let entityKey =
            /* istanbul ignore next */
            (cov_2dypimjhba().s[20]++, null);

            /* istanbul ignore next */
            cov_2dypimjhba().s[21]++;
            arr.forEach(entry => {
              /* istanbul ignore next */
              cov_2dypimjhba().f[3]++;
              cov_2dypimjhba().s[22]++;

              if (entry.toLowerCase().endsWith('app-error')) {
                /* istanbul ignore next */
                cov_2dypimjhba().b[1][0]++;
                cov_2dypimjhba().s[23]++;
                errorHeader = httpErrorResponse.headers.get(entry);
              } else {
                /* istanbul ignore next */
                cov_2dypimjhba().b[1][1]++;
                cov_2dypimjhba().s[24]++;

                if (entry.toLowerCase().endsWith('app-params')) {
                  /* istanbul ignore next */
                  cov_2dypimjhba().b[2][0]++;
                  cov_2dypimjhba().s[25]++;
                  entityKey = httpErrorResponse.headers.get(entry);
                } else
                /* istanbul ignore next */
                {
                  cov_2dypimjhba().b[2][1]++;
                }
              }
            });

            /* istanbul ignore next */
            cov_2dypimjhba().s[26]++;

            if (errorHeader) {
              /* istanbul ignore next */
              cov_2dypimjhba().b[3][0]++;
              const entityName =
              /* istanbul ignore next */
              (cov_2dypimjhba().s[27]++, translateService.instant('global.menu.entities.' + entityKey));

              /* istanbul ignore next */
              cov_2dypimjhba().s[28]++;
              this.addErrorAlert(errorHeader, errorHeader, {
                entityName
              });
            } else {
              /* istanbul ignore next */
              cov_2dypimjhba().b[3][1]++;
              cov_2dypimjhba().s[29]++;

              if (
              /* istanbul ignore next */
              (cov_2dypimjhba().b[5][0]++, httpErrorResponse.error !== '') &&
              /* istanbul ignore next */
              (cov_2dypimjhba().b[5][1]++, httpErrorResponse.error.fieldErrors)) {
                /* istanbul ignore next */
                cov_2dypimjhba().b[4][0]++;
                const fieldErrors =
                /* istanbul ignore next */
                (cov_2dypimjhba().s[30]++, httpErrorResponse.error.fieldErrors);

                /* istanbul ignore next */
                cov_2dypimjhba().s[31]++;

                for (const fieldError of fieldErrors) {
                  /* istanbul ignore next */
                  cov_2dypimjhba().s[32]++;

                  if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {
                    /* istanbul ignore next */
                    cov_2dypimjhba().b[6][0]++;
                    cov_2dypimjhba().s[33]++;
                    fieldError.message = 'Size';
                  } else
                  /* istanbul ignore next */
                  {
                    cov_2dypimjhba().b[6][1]++;
                  } // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it


                  const convertedField =
                  /* istanbul ignore next */
                  (cov_2dypimjhba().s[34]++, fieldError.field.replace(/\[\d*\]/g, '[]'));
                  const fieldName =
                  /* istanbul ignore next */
                  (cov_2dypimjhba().s[35]++, translateService.instant('jhdemoApp.' + fieldError.objectName + '.' + convertedField));

                  /* istanbul ignore next */
                  cov_2dypimjhba().s[36]++;
                  this.addErrorAlert('Error on field "' + fieldName + '"', 'error.' + fieldError.message, {
                    fieldName
                  });
                }
              } else {
                /* istanbul ignore next */
                cov_2dypimjhba().b[4][1]++;
                cov_2dypimjhba().s[37]++;

                if (
                /* istanbul ignore next */
                (cov_2dypimjhba().b[8][0]++, httpErrorResponse.error !== '') &&
                /* istanbul ignore next */
                (cov_2dypimjhba().b[8][1]++, httpErrorResponse.error.message)) {
                  /* istanbul ignore next */
                  cov_2dypimjhba().b[7][0]++;
                  cov_2dypimjhba().s[38]++;
                  this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);
                } else {
                  /* istanbul ignore next */
                  cov_2dypimjhba().b[7][1]++;
                  cov_2dypimjhba().s[39]++;
                  this.addErrorAlert(httpErrorResponse.error);
                }
              }
            }

            /* istanbul ignore next */
            cov_2dypimjhba().s[40]++;
            break;
          }

        case 404:
          /* istanbul ignore next */
          cov_2dypimjhba().b[0][2]++;
          cov_2dypimjhba().s[41]++;
          this.addErrorAlert('Not found', 'error.url.not.found');

          /* istanbul ignore next */
          cov_2dypimjhba().s[42]++;
          break;

        default:
          /* istanbul ignore next */
          cov_2dypimjhba().b[0][3]++;
          cov_2dypimjhba().s[43]++;

          if (
          /* istanbul ignore next */
          (cov_2dypimjhba().b[10][0]++, httpErrorResponse.error !== '') &&
          /* istanbul ignore next */
          (cov_2dypimjhba().b[10][1]++, httpErrorResponse.error.message)) {
            /* istanbul ignore next */
            cov_2dypimjhba().b[9][0]++;
            cov_2dypimjhba().s[44]++;
            this.addErrorAlert(httpErrorResponse.error.message);
          } else {
            /* istanbul ignore next */
            cov_2dypimjhba().b[9][1]++;
            cov_2dypimjhba().s[45]++;
            this.addErrorAlert(httpErrorResponse.error);
          }

      }
    });
  }

  setClasses(alert) {
    /* istanbul ignore next */
    cov_2dypimjhba().f[4]++;
    const classes =
    /* istanbul ignore next */
    (cov_2dypimjhba().s[46]++, {
      'jhi-toast': Boolean(alert.toast)
    });

    /* istanbul ignore next */
    cov_2dypimjhba().s[47]++;

    if (alert.position) {
      /* istanbul ignore next */
      cov_2dypimjhba().b[11][0]++;
      cov_2dypimjhba().s[48]++;
      return Object.assign(Object.assign({}, classes), {
        [alert.position]: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_2dypimjhba().b[11][1]++;
    }

    cov_2dypimjhba().s[49]++;
    return classes;
  }

  ngOnDestroy() {
    /* istanbul ignore next */
    cov_2dypimjhba().f[5]++;
    cov_2dypimjhba().s[50]++;

    if (this.errorListener) {
      /* istanbul ignore next */
      cov_2dypimjhba().b[12][0]++;
      cov_2dypimjhba().s[51]++;
      this.eventManager.destroy(this.errorListener);
    } else
    /* istanbul ignore next */
    {
      cov_2dypimjhba().b[12][1]++;
    }

    cov_2dypimjhba().s[52]++;

    if (this.httpErrorListener) {
      /* istanbul ignore next */
      cov_2dypimjhba().b[13][0]++;
      cov_2dypimjhba().s[53]++;
      this.eventManager.destroy(this.httpErrorListener);
    } else
    /* istanbul ignore next */
    {
      cov_2dypimjhba().b[13][1]++;
    }
  }

  addErrorAlert(message, key, data) {
    /* istanbul ignore next */
    cov_2dypimjhba().f[6]++;
    cov_2dypimjhba().s[54]++;
    message =
    /* istanbul ignore next */
    (cov_2dypimjhba().b[15][0]++, key) &&
    /* istanbul ignore next */
    (cov_2dypimjhba().b[15][1]++, key !== null) ?
    /* istanbul ignore next */
    (cov_2dypimjhba().b[14][0]++, key) :
    /* istanbul ignore next */
    (cov_2dypimjhba().b[14][1]++, message);
    const newAlert =
    /* istanbul ignore next */
    (cov_2dypimjhba().s[55]++, {
      type: 'danger',
      msg: message,
      params: data,
      timeout: 5000,
      toast: this.alertService.isToast(),
      scoped: true
    });

    /* istanbul ignore next */
    cov_2dypimjhba().s[56]++;
    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));
  }

  close(alert) {
    /* istanbul ignore next */
    cov_2dypimjhba().f[7]++;

    var _a; // NOSONAR can be removed after https://github.com/SonarSource/SonarJS/issues/1930 is resolved


    /* istanbul ignore next */
    cov_2dypimjhba().s[57]++;

    /* istanbul ignore next */
    (cov_2dypimjhba().b[17][0]++, (_a = alert.close) === null) ||
    /* istanbul ignore next */
    (cov_2dypimjhba().b[17][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_2dypimjhba().b[16][0]++, void 0) :
    /* istanbul ignore next */
    (cov_2dypimjhba().b[16][1]++, _a.call(alert, this.alerts)); // NOSONAR
  }

};

/* istanbul ignore next */
cov_2dypimjhba().s[58]++;
AlertErrorComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-alert-error',
  template: ` <div class="alerts" role="alert">
    <div *ngFor="let alert of alerts" [ngClass]="setClasses(alert)">
      <ngb-alert *ngIf="alert && alert.type && alert.msg" [type]="alert.type" (close)="close(alert)">
        <pre [innerHTML]="alert.msg"></pre>
      </ngb-alert>
    </div>
  </div>`
}), tslib_1.__metadata("design:paramtypes", [ng_jhipster_1.JhiAlertService, ng_jhipster_1.JhiEventManager, core_2.TranslateService])], AlertErrorComponent);

/* istanbul ignore next */
cov_2dypimjhba().s[59]++;
exports.AlertErrorComponent = AlertErrorComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,